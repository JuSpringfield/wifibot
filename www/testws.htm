 <!DOCTYPE html>
  <meta charset="utf-8" />
  <title>WebSocket</title>

  <style>
		body {
			overflow	: hidden;
			padding		: 0;
			margin		: 0;
			background-color: #BBB;
		}
		#info {
			position	: absolute;
			top		: 0px;
			width		: 100%;
			padding		: 5px;
			text-align	: center;
		}
		#info a {
			color		: #66F;
			text-decoration	: none;
		}
		#info a:hover {
			text-decoration	: underline;
		}
		#container {
			width		: 100%;
			height		: 100%;
			overflow	: hidden;
			padding		: 0;
			margin		: 0;
			-webkit-user-select	: none;
			-moz-user-select	: none;
		}
		</style>
				
		</head>
	<body>
		<div style="position: relative;" id="output"><canvas style="position: absolute; left: 1414px; top: 517px; display: none;" height="126" width="126"></canvas><canvas style="position: absolute; left: 1379px; top: 400px; display: none;" height="86" width="86"></canvas></div>
		<div id="info">
			




	<p><br>
			Touch the screen and move
			-
			works with mouse too as debug
			<br>
	      <span id="result"><b>Result:</b>  dx:0 dy:0</span></p>
</div> 
		<p>
		  <script src="jquery.min.js"></script>
		  <script src="sprintf.js"></script>		
		  <script src="virtualjoystick.js"></script>
    </p>

		<p>&nbsp;</p>
		<p>&nbsp;</p>
		<p>&nbsp;</p>
		<p>&nbsp;</p>
		<p>&nbsp;</p>
		<p>&nbsp;</p>
		<p>&nbsp; </p>
	
  <script language="javascript" type="text/javascript">

  var wsUri = "ws://192.168.1.34:7681";
  var output;
  var iosocket;
  var conok=0;	

  
   function init()
  {
    output = document.getElementById("output");
	//testWebSocket();
  }
  
  function testWebSocket()
  {
    
	//window.WebSocket = window.WebSocket || window.MozWebSocket;
	websocket = new WebSocket('ws://192.168.1.34:7681');
	websocket.binaryType = 'arraybuffer';
	//websocket.onopen = function() {  
    //console.log("Socket has been opened!");  
	//conok=1;
	
	//websocket = new WebSocket(wsUri);
	//websocket.binaryType = 'arraybuffer';
    websocket.onopen = function(evt) { onOpen(evt) };
    websocket.onclose = function(evt) { onClose(evt) };
    websocket.onmessage = function(evt) { onMessage(evt) };
    websocket.onerror = function(evt) { onError(evt) };
	
	
	
  }

  function onOpen(evt)
  {
    writeToScreen("CONNECTED");
	conok=1;
    //doSend("WebSocket rocks");
  }

  function onClose(evt)
  {
    writeToScreen("DISCONNECTED");
	//setTimeout(setupWebSocket, 1000);
	conok=0;
//	testWebSocket();
  
}

  function onMessage(evt)
  {
    //writeToScreen('<span style="color: blue;">RESPONSE: ' + evt.data+'</span>');
	//writeToScreen('<span style="color: blue;">Bin: ' + evt.data+'</span>');
	
  var data = evt.data;
  var dv = new DataView(data);
  var width = dv.getInt32(0);
  var height = dv.getInt32(4);
  var format = 0;//getPixelFormat(dv);
  var len = 0;//dv.getUint32(20);
  console.log('We have width: ' + width +
      'px, height: ' +
      height + 'px, name length: ' + len);
	//websocket.send(arr);
	//websocket.close();
  }

  function onError(evt)
  {
    writeToScreen('<span style="color: red;">ERROR:</span> ' + evt.data);
  }

  function doSend(message)
  {
/*    writeToScreen("SENT: " + message);
    //websocket.send(message);
	var mybuffer = new Uint8Array(40);
	mybuffer[0]=42;
	mybuffer[1]=23;
	
	arr = new ArrayBuffer(8); // an Int32 takes 4 bytes
    view = new DataView(arr);
    view.setInt16(0, -456, false); // byteOffset = 0; litteEndian = false
	view.setInt16(2, -456, false); // byteOffset = 0; litteEndian = false
	view.setInt16(4, -456, false); // byteOffset = 0; litteEndian = false
	view.setInt16(6, -456, false); // byteOffset = 0; litteEndian = false
		*/			
	//websocket.send(arr);
  }
  
  setTimeout(function(){
  
   testWebSocket();
  
  },3000);

  function writeToScreen(message)
  {
    var pre = document.createElement("p");
    pre.style.wordWrap = "break-word";
    pre.innerHTML = message;
    output.appendChild(pre);
  }

  window.addEventListener("load", init, false);
 
  var joystick	= new VirtualJoystick({
				output	: document.getElementById('container'),
				mouseSupport	: true
			});
	
  setInterval(function(){
				//console.log('coucou');
			
				var mybuf = sprintf("%s %s",joystick.deltaX(),joystick.deltaY());
				
if (conok==1) {		
					//var mybuffer = new Int16Array(40);
					//mybuffer[0]=42;
					//mybuffer[1]=23;
					
					arr = new ArrayBuffer(8); // an Int32 takes 4 bytes
					view = new DataView(arr);
				//	view.setInt16(0, -12, false); // byteOffset = 0; litteEndian = false
				//	view.setInt16(2, -489, false); // byteOffset = 0; litteEndian = false
					view.setInt16(0, joystick.deltaX(), false); // byteOffset = 0; litteEndian = false
					view.setInt16(2, joystick.deltaY(), false); // byteOffset = 0; litteEndian = false
					view.setInt16(4, joystick.deltaX(), false); // byteOffset = 0; litteEndian = false
					view.setInt16(6, joystick.deltaY(), false); // byteOffset = 0; litteEndian = false
					
					websocket.send(arr);
					//websocket.send(mybuf);
					console.log(mybuf);
				}
			
				var outputEl	= document.getElementById('result');
				outputEl.innerHTML	= '<b>Result:</b> '
					+ ' dx:'+joystick.deltaX()
					+ ' dy:'+joystick.deltaY()
					+ (joystick.right()	? ' right'	: '')
					+ (joystick.up()	? ' up'		: '')
					+ (joystick.left()	? ' left'	: '')
					+ (joystick.down()	? ' down' 	: '');

			}, 1/30 * 2000);

  </script>

         <p><input type="button" onclick="javascript:testWebSocket();" value="Show Gauge"></p>
  </body></html>